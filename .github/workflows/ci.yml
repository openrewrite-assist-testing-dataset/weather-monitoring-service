name: CI

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: weather_user
          POSTGRES_PASSWORD: weather_pass
          POSTGRES_DB: weather_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Run build
      run: ./gradlew build
    
    - name: Build Docker image
      run: docker build -t weather-monitoring-service:${{ github.sha }} .
    
    - name: Run security scan
      uses: anchore/scan-action@v2
      with:
        image: "weather-monitoring-service:${{ github.sha }}"
        fail-build: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/build/test-results/test/
          **/build/reports/tests/test/